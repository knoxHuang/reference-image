'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
module.paths.push(path_1.join(Editor.App.path, 'node_modules'));
const cc_1 = require("cc");
const fs_1 = require("fs");
const NAME = 'Reference-Image';
exports.methods = {
    // 通过图片创建参考图
    async getTargets() {
        let canvas = cc_1.find(`Editor Scene Background/${NAME}-Canvas`);
        if (!canvas) {
            canvas = new cc_1.PrivateNode(`${NAME}-Canvas`);
            canvas.addComponent(cc_1.Canvas);
            canvas.parent = cc_1.find('Editor Scene Background');
        }
        let node = canvas.getChildByName(NAME);
        if (!node) {
            node = new cc_1.PrivateNode(NAME);
            node.parent = canvas;
        }
        node.active = await Editor.Profile.getConfig('reference-image', 'show');
        let sprite = node.getComponent(cc_1.Sprite) || node.addComponent(cc_1.Sprite);
        const color = sprite.color;
        color.a = 100;
        sprite.color = color;
        cce.Engine.repaintInEditMode();
        return {
            node,
            sprite
        };
    },
    // 移动参考图
    async moveX(x) {
        const { node } = await this.getTargets();
        const position = node.position;
        position.x = x;
        node.position = position;
        cce.Engine.repaintInEditMode();
    },
    async moveY(y) {
        const { node } = await this.getTargets();
        const position = node.position;
        position.y = y;
        node.position = position;
        cce.Engine.repaintInEditMode();
    },
    async setOpacity(opacity) {
        const { sprite } = await this.getTargets();
        const color = sprite.color;
        color.a = opacity;
        sprite.color = color;
        cce.Engine.repaintInEditMode();
    },
    // 切换参考图
    async switchImages(path) {
        const { sprite } = await this.getTargets();
        let data = fs_1.readFileSync(path);
        data = new Buffer(data).toString('base64');
        let image = new Image();
        image.src = 'data:png;base64,' + data;
        image.onload = () => {
            sprite.spriteFrame = cc_1.SpriteFrame.createWithImage(image);
            cce.Engine.repaintInEditMode();
        };
    },
    // 清空
    async resetImage() {
        const { sprite } = await this.getTargets();
        sprite.spriteFrame = null;
        cce.Engine.repaintInEditMode();
    },
    // 设置参考图是否显示
    async setImageVisible(value) {
        const { node } = await this.getTargets();
        node.active = value;
        cce.Engine.repaintInEditMode();
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NlbmUtd2Fsa2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc291cmNlL2NvbnRyaWJ1dGlvbnMvc2NlbmUtd2Fsa2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7QUFFYiwrQkFBNEI7QUFFNUIsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUM7QUFFekQsMkJBQWdGO0FBQ2hGLDJCQUFrQztBQUVsQyxNQUFNLElBQUksR0FBRyxpQkFBaUIsQ0FBQztBQUUvQixPQUFPLENBQUMsT0FBTyxHQUFHO0lBQ2QsWUFBWTtJQUNaLEtBQUssQ0FBQyxVQUFVO1FBQ1osSUFBSSxNQUFNLEdBQUcsU0FBSSxDQUFDLDJCQUEyQixJQUFJLFNBQVMsQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDVCxNQUFNLEdBQUcsSUFBSSxnQkFBVyxDQUFDLEdBQUcsSUFBSSxTQUFTLENBQUMsQ0FBQztZQUMzQyxNQUFNLENBQUMsWUFBWSxDQUFDLFdBQU0sQ0FBQyxDQUFDO1lBQzVCLE1BQU0sQ0FBQyxNQUFNLEdBQUcsU0FBSSxDQUFDLHlCQUF5QixDQUFDLENBQUM7U0FDbkQ7UUFDRCxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDUCxJQUFJLEdBQUcsSUFBSSxnQkFBVyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1NBQ3hCO1FBQ0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLE1BQU0sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLGlCQUFpQixFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBRXhFLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxZ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QUFDO1FBQ3pDLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO1FBQ3BCLEdBQUcsQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUNuQyxDQUFDO0NBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHsgam9pbiB9IGZyb20gXCJwYXRoXCI7XG5cbm1vZHVsZS5wYXRocy5wdXNoKGpvaW4oRWRpdG9yLkFwcC5wYXRoLCAnbm9kZV9tb2R1bGVzJykpO1xuXG5pbXBvcnQgeyBQcml2YXRlTm9kZSwgQ2FudmFzLCBTcHJpdGUsIGZpbmQsIEltYWdlQXNzZXQsIFNwcml0ZUZyYW1lIH0gZnJvbSAnY2MnO1xuaW1wb3J0IHsgcmVhZEZpbGVTeW5jIH0gZnJvbSBcImZzXCI7XG5cbmNvbnN0IE5BTUUgPSAnUmVmZXJlbmNlLUltYWdlJztcblxuZXhwb3J0cy5tZXRob2RzID0ge1xuICAgIC8vIOmAmui/h+WbvueJh+WIm+W7uuWPguiAg+WbvlxuICAgIGFzeW5jIGdldFRhcmdldHMoKSB7XG4gICAgICAgIGxldCBjYW52YXMgPSBmaW5kKGBFZGl0b3IgU2NlbmUgQmFja2dyb3VuZC8ke05BTUV9LUNhbnZhc2ApO1xuICAgICAgICBpZiAoIWNhbnZhcykge1xuICAgICAgICAgICAgY2FudmFzID0gbmV3IFByaXZhdGVOb2RlKGAke05BTUV9LUNhbnZhc2ApO1xuICAgICAgICAgICAgY2FudmFzLmFkZENvbXBvbmVudChDYW52YXMpO1xuICAgICAgICAgICAgY2FudmFzLnBhcmVudCA9IGZpbmQoJ0VkaXRvciBTY2VuZSBCYWNrZ3JvdW5kJyk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IG5vZGUgPSBjYW52YXMuZ2V0Q2hpbGRCeU5hbWUoTkFNRSk7XG4gICAgICAgIGlmICghbm9kZSkge1xuICAgICAgICAgICAgbm9kZSA9IG5ldyBQcml2YXRlTm9kZShOQU1FKTtcbiAgICAgICAgICAgIG5vZGUucGFyZW50ID0gY2FudmFzO1xuICAgICAgICB9XG4gICAgICAgIG5vZGUuYWN0aXZlID0gYXdhaXQgRWRpdG9yLlByb2ZpbGUuZ2V0Q29uZmlnKCdyZWZlcmVuY2UtaW1hZ2UnLCAnc2hvdycpO1xuXG4gICAgICAgIGxldCBzcHJpdGUgPSBub2RlLmdldENvbXBvbmVudChTcHJpdGUpIHx8IG5vZGUuYWRkQ29tcG9uZW50KFNwcml0ZSk7XG4gICAgICAgIGNvbnN0IGNvbG9yID0gc3ByaXRlLmNvbG9yO1xuICAgICAgICBjb2xvci5hID0gMTAwO1xuICAgICAgICBzcHJpdGUuY29sb3IgPSBjb2xvcjtcbiAgICAgICAgY2NlLkVuZ2luZS5yZXBhaW50SW5FZGl0TW9kZSgpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbm9kZSxcbiAgICAgICAgICAgIHNwcml0ZVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIC8vIOenu+WKqOWPguiAg+WbvlxuICAgIGFzeW5jIG1vdmVYKHg6IG51bWJlcikge1xuICAgICAgICBjb25zdCB7IG5vZGUgfSA9IGF3YWl0IHRoaXMuZ2V0VGFyZ2V0cygpO1xuICAgICAgICBjb25zdCBwb3NpdGlvbiA9IG5vZGUucG9zaXRpb247XG4gICAgICAgIHBvc2l0aW9uLnggPSB4O1xuICAgICAgICBub2RlLnBvc2l0aW9uID0gcG9zaXRpb247XG4gICAgICAgIGNjZS5FbmdpbmUucmVwYWludEluRWRpdE1vZGUoKTtcbiAgICB9LFxuXG4gICAgYXN5bmMgbW92ZVkoeTogbnVtYmVyKSB7XG4gICAgICAgIGNvbnN0IHsgbm9kZSB9ID0gYXdhaXQgdGhpcy5nZXRUYXJnZXRzKCk7XG4gICAgICAgIGNvbnN0IHBvc2l0aW9uID0gbm9kZS5wb3NpdGlvbjtcbiAgICAgICAgcG9zaXRpb24ueSA9IHk7XG4gICAgICAgIG5vZGUucG9zaXRpb24gPSBwb3NpdGlvbjtcbiAgICAgICAgY2NlLkVuZ2luZS5yZXBhaW50SW5FZGl0TW9kZSgpO1xuICAgIH0sXG5cbiAgICBhc3luYyBzZXRPcGFjaXR5KG9wYWNpdHk6IG51bWJlcikge1xuICAgICAgICBjb25zdCB7IHNwcml0ZSB9ID0gYXdhaXQgdGhpcy5nZXRUYXJnZXRzKCk7XG4gICAgICAgIGNvbnN0IGNvbG9yID0gc3ByaXRlLmNvbG9yO1xuICAgICAgICBjb2xvci5hID0gb3BhY2l0eTtcbiAgICAgICAgc3ByaXRlLmNvbG9yID0gY29sb3I7XG4gICAgICAgIGNjZS5FbmdpbmUucmVwYWludEluRWRpdE1vZGUoKTtcbiAgICB9LFxuXG4gICAgLy8g5YiH5o2i5Y+C6ICD5Zu+XG4gICAgYXN5bmMgc3dpdGNoSW1hZ2VzKHBhdGg6IHN0cmluZykge1xuICAgICAgICBjb25zdCB7IHNwcml0ZSB9ID0gYXdhaXQgdGhpcy5nZXRUYXJnZXRzKCk7XG4gICAgICAgIGxldCBkYXRhOiBzdHJpbmcgfCBCdWZmZXIgPSByZWFkRmlsZVN5bmMocGF0aCk7XG4gICAgICAgIGRhdGEgPSBuZXcgQnVmZmVyKGRhdGEpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbiAgICAgICAgbGV0IGltYWdlID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGltYWdlLnNyYyA9ICdkYXRhOnBuZztiYXNlNjQsJyArIGRhdGE7XG4gICAgICAgIGltYWdlLm9ubG9hZCA9ICgpID0+IHtcbiAgICAgICAgICAgIHNwcml0ZS5zcHJpdGVGcmFtZSA9IFNwcml0ZUZyYW1lLmNyZWF0ZVdpdGhJbWFnZShpbWFnZSk7XG4gICAgICAgICAgICBjY2UuRW5naW5lLnJlcGFpbnRJbkVkaXRNb2RlKCk7XG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgLy8g5riF56m6XG4gICAgYXN5bmMgcmVzZXRJbWFnZSgpIHtcbiAgICAgICAgY29uc3QgeyBzcHJpdGUgfSA9IGF3YWl0IHRoaXMuZ2V0VGFyZ2V0cygpO1xuICAgICAgICBzcHJpdGUuc3ByaXRlRnJhbWUgPSBudWxsO1xuICAgICAgICBjY2UuRW5naW5lLnJlcGFpbnRJbkVkaXRNb2RlKCk7XG4gICAgfSxcblxuICAgIC8vIOiuvue9ruWPguiAg+WbvuaYr+WQpuaYvuekulxuICAgIGFzeW5jIHNldEltYWdlVmlzaWJsZSh2YWx1ZTogYm9vbGVhbikge1xuICAgICAgICBjb25zdCB7IG5vZGUgfSA9IGF3YWl0IHRoaXMuZ2V0VGFyZ2V0cygpO1xuICAgICAgICBub2RlLmFjdGl2ZSA9IHZhbHVlO1xuICAgICAgICBjY2UuRW5naW5lLnJlcGFpbnRJbkVkaXRNb2RlKCk7XG4gICAgfVxufTtcbiJdfQ==